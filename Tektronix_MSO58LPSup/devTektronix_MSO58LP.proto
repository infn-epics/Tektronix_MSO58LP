OutTerminator = '\n';
ReplyTimeout = 500;

getIDN {
    out "*IDN?";
    #Read no more that 39 chars (EPICS limit)
    in "%/(.{0,39})/";
    ExtraInput = Ignore;
}

readIDNParts {
    out "*IDN?";
    in "%(\$1)[_a-zA-Z0-9],%(\$2)[_a-zA-Z0-9],%(\$3)[_a-zA-Z0-9],CF:%(\$4)[a-zA-Z0-9\.] FV:%(\$5)[_a-zA-Z0-9\.]";
	ExtraInput = Ignore;

}


getXINC {
	#get x increment for plot
	out ":DATa:SOUrce CH\$1";
	wait 10;
	out "WFMOutpre:XINcr?";
	in "%f";
	ExtraInput = Ignore;
}

getYMULT {
	#get y multiplier for plot
	out ":DATa:SOUrce CH\$1";
	wait 10;
	out "WFMOutpre:YMUlt?";
	in "%f";
	ExtraInput = Ignore;
}

getYOff {
	#get y multiplier for plot
	out ":DATa:SOUrce CH\$1";
	wait 10;
	out "WFMOutpre:YZEro?";
	in "%f";
	ExtraInput = Ignore;
}

getXUNIT {
	#get x unit for plot
	out ":DATa:SOUrce CH\$1";
	wait 10;
	out "WFMOutpre:XUNit?";
	in '%/([a-zA-Z]+)/';
	ExtraInput = Ignore;
}

getYUNIT {
	#get y unit for plot
	out ":DATa:SOUrce CH\$1";
	wait 10;
	out "WFMOutpre:YUNit?";
	in '%/([a-zA-Z]+)/';
	ExtraInput = Ignore;
}

getWFID {
	#get waveform ID string with channel information
	#Returns: "Ch1, DC coupling, 100.0mV/div, 4.000us/div, 10000 points, Sample mode"
	out ":DATa:SOUrce CH\$1";
	wait 10;
	out "WFMOutpre:WFId?";
	in '"%[^\"]"';
	ExtraInput = Ignore;
}

getNR_PT {
	#get number of points in waveform
	#Returns: 10000 (integer indicating number of data points)
	out ":DATa:SOUrce CH\$1";
	wait 10;
	out "WFMOutpre:NR_Pt?";
	in "%d";
	ExtraInput = Ignore;
}

setNR_PT {
	#set horizontal record length (number of points)
	#Sets the number of data points in the waveform record
	#Valid values: 500, 1000, 2500, 5000, 10000, 25000, 50000, 100000, 250000, etc.
	out "HORizontal:RECOrdlength %d";
	wait 100;
	ExtraInput = Ignore;
}

setTransfer {
#	out ":VERBOSE 0";
#	wait 1;
#	out "HEADER 0";
#	wait 1;
	out ":DATa:SOUrce CH\$1";
	wait 1;
	out ":DATa:STARt %(\$2)d";
	wait 1;
	out ":DATa:STOP %(\$3)d";
	wait 1;
	out ":DATa:ENCdg ASCIi";
	wait 1;
	out ":DATa:WIDth 2";
	wait 1;
	ExtraInput = Ignore;
}
getYDATA {
	#ask scope for y data points
	# out ":VERBOSE 0";
	# wait 1;
	# out "HEADER 0";
	# wait 1;
	out ":DATa:SOUrce CH\$1";
	wait 10;
	out ":DATa:STARt %(\$2)d";
	wait 10;
	out ":DATa:STOP %(\$3)d";
	wait 10;
	out ":DATa:ENCdg ASCIi";
	#out "DATa:ENCdg RIBinary";        # Signed binary encoding

	wait 10;
	out ":DATa:WIDth 2";
	wait 10;
	out ":CURVe?";
	separator=",";
	in "%d";
	#in  "%#02r";                        # Read binary block as 16-bit words
	ExtraInput = Ignore;
}
getYDATAs {
	out ":VERBOSE 0";
	wait 1;
	out "HEADER 0";
	wait 1;
	out ":DATa:SOUrce CH\$1";
	wait 1;
	out ":DATa:ENCdg ASCIi";
	wait 1;

	out ":CURVe?";
	separator=",";
	in "%d";
	ExtraInput = Ignore;
}
setLabel{
	out "CH\$1:LABEL:NAME \"%s\"";
	ExtraInput = Ignore;

}
